How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    FThe differences between both files are clearly shown

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can restore easily previous versions or see where you introduced any bug

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It's better to keep it under the responsability oof the programmer as he shall select when to commit. If 
    it's done automatically, could lead to inconsistent versions of the project

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   Because GIT is oriented to software developement and a project contains multiple files that needs to be consistent

How can you use the commands git log and git diff to view the history of files?

    With the log command, you can check all the commit history and with the git diff, you can see the differences between two commits by indicating the revision number of each.
    The insertions and deletions will be marked in red and green colour.

How might using version control make you more confident to make changes that
could break something?

    As you will have always the previous versions that were working, you can just check new functionalities without risk as you can always go back to previous states where
    things were working

Now that you have your workspace set up, what do you want to try using Git for?

    For taking more control on my projects and keep tracking of all the changes, if not all the projects are a mess and it's hard to track them, specially for bugs and versions.
    lala test editor
